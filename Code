#install.packages("ggplot2")
#install.packages("dplyr")

library(shiny)
library(ggplot2)
library(dplyr)

#import data
setwd("C:/Users/End User/Documents/DEGREE/sem 4/data science")
getwd()
stageData <- read.csv("Data.csv")
#stageData[stageData == ""] <- NA
#stageData_updated <- na.omit(stageData)
Loss <- stageData$loss_percentage
Stage <- stageData$food_supply_stage
Country <- stageData$country
df <- data.frame(Country, Stage, Loss)
#Stage[Stage == ""] <- NA
#dataStage <- na.omit(Stage)

# Define UI for application
ui <- fluidPage(
    navbarPage( 
      "Food Counsel",
      tabPanel( "Stage",
        h2("Stage of Food Waste"),
        br(),
        p("This tab will show the break down of dataset to identify at which stage does food waste occur the most in a country."),
        br(),
        sidebarPanel(
          
          #select country
          #selectInput("Country", label = h3("Select Country"), choices = c("",as.character(Country)),
          #            selected = NULL, multiple = FALSE),
          
          #select stage
          #selectInput("Stage", label = h3("Select Stage"), choices = c("All",as.character(Stage)),
          #            selected = "All", multiple = FALSE),
          
          fluidRow(column(12, dataTableOutput("table"), align = "center")),
          
        ), #sidebar panel

        mainPanel(
          #fluidRow(column(5, verbatimTextOutput("valueCountry"))),
          #fluidRow(column(5, verbatimTextOutput("valueStage"))),
          plotOutput("plot")
        ) #main panel
        
      ),#tab 1
      
      tabPanel("tab 2","empty"), #tab 2
      tabPanel("tab 3","empty"), #tab 3
      
    ) #Navbar Page
) #fluid Page

# Define server logic required to draw a histogram
server <- function(input, output) {

  #print country
  output$valueCountry <- renderPrint({ input$Country })
  #output$valueStage <- renderPrint({ input$Stage })
  output$table <- renderDataTable(df)
  output$plot <- renderPlot({
    ggplot(df, aes(x = Country, y = Loss)) +
      geom_point(aes(colour=Stage), stat = 'identity') +
      #geom_boxplot(stat = 'identity',aes(ymin = min(df$Loss), lower = quantile(df$Loss, 0.25), 
      #                                   middle = median(df$Loss), upper = quantile(df$Loss, 0.75), 
      #                                   ymax = max(df$Loss), colour = Stage, na.rm = FALSE, group = cut_width(Country, 0.25))) +
      coord_flip() +
      ggtitle("Food Waste Stage") +
      xlab("Country") +
      ylab("Food Waste Percentage (%)") +
      scale_fill_gradient("Average", low="darkolivegreen1",high="deepskyblue3") +
      theme_bw(base_size = 15)
  })
    
  #                    boxplot( Loss ~ get(input$Stage), data = stageData, xlab = "Number of Cylinders",
  #                                   ylab = "Miles Per Gallon", main = "Mileage Data")})
}

# Run the application 
shinyApp(ui = ui, server = server)

